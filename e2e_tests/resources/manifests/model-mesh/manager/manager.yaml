# Copyright 2021 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: modelmesh-controller
  labels:
    control-plane: modelmesh-controller
spec:
  selector:
    matchLabels:
      control-plane: modelmesh-controller
  replicas: 3
  template:
    metadata:
      labels:
        control-plane: modelmesh-controller
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: control-plane
                      operator: In
                      values:
                        - modelmesh-controller
                topologyKey: topology.kubernetes.io/zone
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
      containers:
        - command:
            - /manager
          args:
            - --enable-leader-election
          image: $(odh-modelmesh-controller)
          name: manager
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ETCD_SECRET_NAME
              value: "model-serving-etcd"
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 10
          resources:
            requests:
              cpu: 50m
              memory: 96Mi
            limits:
              cpu: "1"
              memory: 2Gi
          volumeMounts:
            - mountPath: /etc/model-serving/config/default
              name: config-defaults
              readOnly: true
          securityContext:
            capabilities:
              drop:
                - ALL
      terminationGracePeriodSeconds: 10
      serviceAccountName: modelmesh-controller
      volumes:
        - name: config-defaults
          configMap:
            defaultMode: 420
            name: model-serving-config-defaults
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: modelmesh-controller
  name: modelmesh-controller
spec:
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
  selector:
    control-plane: modelmesh-controller
