// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc_predict_v2.proto

package org.kie.trustyai.connectors.kserve.v2.grpc;

/**
 * Protobuf type {@code inference.ModelInferResponse}
 */
public final class ModelInferResponse extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:inference.ModelInferResponse)
        ModelInferResponseOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use ModelInferResponse.newBuilder() to construct.
    private ModelInferResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }

    private ModelInferResponse() {
        modelName_ = "";
        modelVersion_ = "";
        id_ = "";
        outputs_ = java.util.Collections.emptyList();
        rawOutputContents_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({ "unused" })
    protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
        return new ModelInferResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
        return this.unknownFields;
    }

    private ModelInferResponse(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
            boolean done = false;
            while (!done) {
                int tag = input.readTag();
                switch (tag) {
                    case 0:
                        done = true;
                        break;
                    case 10: {
                        java.lang.String s = input.readStringRequireUtf8();

                        modelName_ = s;
                        break;
                    }
                    case 18: {
                        java.lang.String s = input.readStringRequireUtf8();

                        modelVersion_ = s;
                        break;
                    }
                    case 26: {
                        java.lang.String s = input.readStringRequireUtf8();

                        id_ = s;
                        break;
                    }
                    case 34: {
                        if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                            parameters_ = com.google.protobuf.MapField.newMapField(
                                    ParametersDefaultEntryHolder.defaultEntry);
                            mutable_bitField0_ |= 0x00000001;
                        }
                        com.google.protobuf.MapEntry<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> parameters__ = input.readMessage(
                                ParametersDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                        parameters_.getMutableMap().put(
                                parameters__.getKey(), parameters__.getValue());
                        break;
                    }
                    case 42: {
                        if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                            outputs_ = new java.util.ArrayList<org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor>();
                            mutable_bitField0_ |= 0x00000002;
                        }
                        outputs_.add(
                                input.readMessage(org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.parser(), extensionRegistry));
                        break;
                    }
                    case 50: {
                        if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                            rawOutputContents_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                            mutable_bitField0_ |= 0x00000004;
                        }
                        rawOutputContents_.add(input.readBytes());
                        break;
                    }
                    default: {
                        if (!parseUnknownField(
                                input, unknownFields, extensionRegistry, tag)) {
                            done = true;
                        }
                        break;
                    }
                }
            }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                    e).setUnfinishedMessage(this);
        } finally {
            if (((mutable_bitField0_ & 0x00000002) != 0)) {
                outputs_ = java.util.Collections.unmodifiableList(outputs_);
            }
            if (((mutable_bitField0_ & 0x00000004) != 0)) {
                rawOutputContents_ = java.util.Collections.unmodifiableList(rawOutputContents_); // C
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
        }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
        return org.kie.trustyai.connectors.kserve.v2.grpc.GrpcPredictV2.internal_static_inference_ModelInferResponse_descriptor;
    }

    @SuppressWarnings({ "rawtypes" })
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
            int number) {
        switch (number) {
            case 4:
                return internalGetParameters();
            default:
                throw new RuntimeException(
                        "Invalid map field number: " + number);
        }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
        return org.kie.trustyai.connectors.kserve.v2.grpc.GrpcPredictV2.internal_static_inference_ModelInferResponse_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.class, org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.Builder.class);
    }

    public interface InferOutputTensorOrBuilder extends
            // @@protoc_insertion_point(interface_extends:inference.ModelInferResponse.InferOutputTensor)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * The tensor name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * 
         * @return The name.
         */
        java.lang.String getName();

        /**
         * <pre>
         * The tensor name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * 
         * @return The bytes for name.
         */
        com.google.protobuf.ByteString
                getNameBytes();

        /**
         * <pre>
         * The tensor data type.
         * </pre>
         *
         * <code>string datatype = 2;</code>
         * 
         * @return The datatype.
         */
        java.lang.String getDatatype();

        /**
         * <pre>
         * The tensor data type.
         * </pre>
         *
         * <code>string datatype = 2;</code>
         * 
         * @return The bytes for datatype.
         */
        com.google.protobuf.ByteString
                getDatatypeBytes();

        /**
         * <pre>
         * The tensor shape.
         * </pre>
         *
         * <code>repeated int64 shape = 3;</code>
         * 
         * @return A list containing the shape.
         */
        java.util.List<java.lang.Long> getShapeList();

        /**
         * <pre>
         * The tensor shape.
         * </pre>
         *
         * <code>repeated int64 shape = 3;</code>
         * 
         * @return The count of shape.
         */
        int getShapeCount();

        /**
         * <pre>
         * The tensor shape.
         * </pre>
         *
         * <code>repeated int64 shape = 3;</code>
         * 
         * @param index The index of the element to return.
         * @return The shape at the given index.
         */
        long getShape(int index);

        /**
         * <pre>
         * Optional output tensor parameters.
         * </pre>
         *
         * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
         */
        int getParametersCount();

        /**
         * <pre>
         * Optional output tensor parameters.
         * </pre>
         *
         * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
         */
        boolean containsParameters(
                java.lang.String key);

        /**
         * Use {@link #getParametersMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter>
                getParameters();

        /**
         * <pre>
         * Optional output tensor parameters.
         * </pre>
         *
         * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
         */
        java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter>
                getParametersMap();

        /**
         * <pre>
         * Optional output tensor parameters.
         * </pre>
         *
         * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
         */

        org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter getParametersOrDefault(
                java.lang.String key,
                org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter defaultValue);

        /**
         * <pre>
         * Optional output tensor parameters.
         * </pre>
         *
         * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
         */

        org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter getParametersOrThrow(
                java.lang.String key);

        /**
         * <pre>
         * The tensor contents using a data-type format. This field must
         * not be specified if "raw" tensor contents are being used for
         * the inference response.
         * </pre>
         *
         * <code>.inference.InferTensorContents contents = 5;</code>
         * 
         * @return Whether the contents field is set.
         */
        boolean hasContents();

        /**
         * <pre>
         * The tensor contents using a data-type format. This field must
         * not be specified if "raw" tensor contents are being used for
         * the inference response.
         * </pre>
         *
         * <code>.inference.InferTensorContents contents = 5;</code>
         * 
         * @return The contents.
         */
        org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents getContents();

        /**
         * <pre>
         * The tensor contents using a data-type format. This field must
         * not be specified if "raw" tensor contents are being used for
         * the inference response.
         * </pre>
         *
         * <code>.inference.InferTensorContents contents = 5;</code>
         */
        org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContentsOrBuilder getContentsOrBuilder();
    }

    /**
     * <pre>
     * An output tensor returned for an inference request.
     * </pre>
     *
     * Protobuf type {@code inference.ModelInferResponse.InferOutputTensor}
     */
    public static final class InferOutputTensor extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:inference.ModelInferResponse.InferOutputTensor)
            InferOutputTensorOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use InferOutputTensor.newBuilder() to construct.
        private InferOutputTensor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private InferOutputTensor() {
            name_ = "";
            datatype_ = "";
            shape_ = emptyLongList();
        }

        @java.lang.Override
        @SuppressWarnings({ "unused" })
        protected java.lang.Object newInstance(
                UnusedPrivateParameter unused) {
            return new InferOutputTensor();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
                getUnknownFields() {
            return this.unknownFields;
        }

        private InferOutputTensor(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            java.lang.String s = input.readStringRequireUtf8();

                            name_ = s;
                            break;
                        }
                        case 18: {
                            java.lang.String s = input.readStringRequireUtf8();

                            datatype_ = s;
                            break;
                        }
                        case 24: {
                            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                shape_ = newLongList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            shape_.addLong(input.readInt64());
                            break;
                        }
                        case 26: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                                shape_ = newLongList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                shape_.addLong(input.readInt64());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 34: {
                            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                                parameters_ = com.google.protobuf.MapField.newMapField(
                                        ParametersDefaultEntryHolder.defaultEntry);
                                mutable_bitField0_ |= 0x00000002;
                            }
                            com.google.protobuf.MapEntry<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> parameters__ = input.readMessage(
                                    ParametersDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                            parameters_.getMutableMap().put(
                                    parameters__.getKey(), parameters__.getValue());
                            break;
                        }
                        case 42: {
                            org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents.Builder subBuilder = null;
                            if (contents_ != null) {
                                subBuilder = contents_.toBuilder();
                            }
                            contents_ = input.readMessage(org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(contents_);
                                contents_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) != 0)) {
                    shape_.makeImmutable(); // C
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
            return org.kie.trustyai.connectors.kserve.v2.grpc.GrpcPredictV2.internal_static_inference_ModelInferResponse_InferOutputTensor_descriptor;
        }

        @SuppressWarnings({ "rawtypes" })
        @java.lang.Override
        protected com.google.protobuf.MapField internalGetMapField(
                int number) {
            switch (number) {
                case 4:
                    return internalGetParameters();
                default:
                    throw new RuntimeException(
                            "Invalid map field number: " + number);
            }
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
            return org.kie.trustyai.connectors.kserve.v2.grpc.GrpcPredictV2.internal_static_inference_ModelInferResponse_InferOutputTensor_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.class,
                            org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.Builder.class);
        }

        public static final int NAME_FIELD_NUMBER = 1;
        private volatile java.lang.Object name_;

        /**
         * <pre>
         * The tensor name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * 
         * @return The name.
         */
        @java.lang.Override
        public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                name_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The tensor name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * 
         * @return The bytes for name.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
                getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int DATATYPE_FIELD_NUMBER = 2;
        private volatile java.lang.Object datatype_;

        /**
         * <pre>
         * The tensor data type.
         * </pre>
         *
         * <code>string datatype = 2;</code>
         * 
         * @return The datatype.
         */
        @java.lang.Override
        public java.lang.String getDatatype() {
            java.lang.Object ref = datatype_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                datatype_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The tensor data type.
         * </pre>
         *
         * <code>string datatype = 2;</code>
         * 
         * @return The bytes for datatype.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
                getDatatypeBytes() {
            java.lang.Object ref = datatype_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                datatype_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int SHAPE_FIELD_NUMBER = 3;
        private com.google.protobuf.Internal.LongList shape_;

        /**
         * <pre>
         * The tensor shape.
         * </pre>
         *
         * <code>repeated int64 shape = 3;</code>
         * 
         * @return A list containing the shape.
         */
        @java.lang.Override
        public java.util.List<java.lang.Long>
                getShapeList() {
            return shape_;
        }

        /**
         * <pre>
         * The tensor shape.
         * </pre>
         *
         * <code>repeated int64 shape = 3;</code>
         * 
         * @return The count of shape.
         */
        public int getShapeCount() {
            return shape_.size();
        }

        /**
         * <pre>
         * The tensor shape.
         * </pre>
         *
         * <code>repeated int64 shape = 3;</code>
         * 
         * @param index The index of the element to return.
         * @return The shape at the given index.
         */
        public long getShape(int index) {
            return shape_.getLong(index);
        }

        private int shapeMemoizedSerializedSize = -1;

        public static final int PARAMETERS_FIELD_NUMBER = 4;

        private static final class ParametersDefaultEntryHolder {
            static final com.google.protobuf.MapEntry<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> defaultEntry =
                    com.google.protobuf.MapEntry.<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> newDefaultInstance(
                            org.kie.trustyai.connectors.kserve.v2.grpc.GrpcPredictV2.internal_static_inference_ModelInferResponse_InferOutputTensor_ParametersEntry_descriptor,
                            com.google.protobuf.WireFormat.FieldType.STRING,
                            "",
                            com.google.protobuf.WireFormat.FieldType.MESSAGE,
                            org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter.getDefaultInstance());
        }

        private com.google.protobuf.MapField<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> parameters_;

        private com.google.protobuf.MapField<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter>
                internalGetParameters() {
            if (parameters_ == null) {
                return com.google.protobuf.MapField.emptyMapField(
                        ParametersDefaultEntryHolder.defaultEntry);
            }
            return parameters_;
        }

        public int getParametersCount() {
            return internalGetParameters().getMap().size();
        }

        /**
         * <pre>
         * Optional output tensor parameters.
         * </pre>
         *
         * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
         */

        @java.lang.Override
        public boolean containsParameters(
                java.lang.String key) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            return internalGetParameters().getMap().containsKey(key);
        }

        /**
         * Use {@link #getParametersMap()} instead.
         */
        @java.lang.Override
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> getParameters() {
            return getParametersMap();
        }

        /**
         * <pre>
         * Optional output tensor parameters.
         * </pre>
         *
         * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
         */
        @java.lang.Override

        public java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> getParametersMap() {
            return internalGetParameters().getMap();
        }

        /**
         * <pre>
         * Optional output tensor parameters.
         * </pre>
         *
         * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
         */
        @java.lang.Override

        public org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter getParametersOrDefault(
                java.lang.String key,
                org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter defaultValue) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> map =
                    internalGetParameters().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
        }

        /**
         * <pre>
         * Optional output tensor parameters.
         * </pre>
         *
         * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
         */
        @java.lang.Override

        public org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter getParametersOrThrow(
                java.lang.String key) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> map =
                    internalGetParameters().getMap();
            if (!map.containsKey(key)) {
                throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
        }

        public static final int CONTENTS_FIELD_NUMBER = 5;
        private org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents contents_;

        /**
         * <pre>
         * The tensor contents using a data-type format. This field must
         * not be specified if "raw" tensor contents are being used for
         * the inference response.
         * </pre>
         *
         * <code>.inference.InferTensorContents contents = 5;</code>
         * 
         * @return Whether the contents field is set.
         */
        @java.lang.Override
        public boolean hasContents() {
            return contents_ != null;
        }

        /**
         * <pre>
         * The tensor contents using a data-type format. This field must
         * not be specified if "raw" tensor contents are being used for
         * the inference response.
         * </pre>
         *
         * <code>.inference.InferTensorContents contents = 5;</code>
         * 
         * @return The contents.
         */
        @java.lang.Override
        public org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents getContents() {
            return contents_ == null ? org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents.getDefaultInstance() : contents_;
        }

        /**
         * <pre>
         * The tensor contents using a data-type format. This field must
         * not be specified if "raw" tensor contents are being used for
         * the inference response.
         * </pre>
         *
         * <code>.inference.InferTensorContents contents = 5;</code>
         */
        @java.lang.Override
        public org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContentsOrBuilder getContentsOrBuilder() {
            return getContents();
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(datatype_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, datatype_);
            }
            if (getShapeList().size() > 0) {
                output.writeUInt32NoTag(26);
                output.writeUInt32NoTag(shapeMemoizedSerializedSize);
            }
            for (int i = 0; i < shape_.size(); i++) {
                output.writeInt64NoTag(shape_.getLong(i));
            }
            com.google.protobuf.GeneratedMessageV3
                    .serializeStringMapTo(
                            output,
                            internalGetParameters(),
                            ParametersDefaultEntryHolder.defaultEntry,
                            4);
            if (contents_ != null) {
                output.writeMessage(5, getContents());
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1)
                return size;

            size = 0;
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(datatype_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, datatype_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < shape_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt64SizeNoTag(shape_.getLong(i));
                }
                size += dataSize;
                if (!getShapeList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                shapeMemoizedSerializedSize = dataSize;
            }
            for (java.util.Map.Entry<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> entry : internalGetParameters().getMap().entrySet()) {
                com.google.protobuf.MapEntry<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> parameters__ = ParametersDefaultEntryHolder.defaultEntry.newBuilderForType()
                        .setKey(entry.getKey())
                        .setValue(entry.getValue())
                        .build();
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, parameters__);
            }
            if (contents_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, getContents());
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor)) {
                return super.equals(obj);
            }
            org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor other = (org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor) obj;

            if (!getName()
                    .equals(other.getName()))
                return false;
            if (!getDatatype()
                    .equals(other.getDatatype()))
                return false;
            if (!getShapeList()
                    .equals(other.getShapeList()))
                return false;
            if (!internalGetParameters().equals(
                    other.internalGetParameters()))
                return false;
            if (hasContents() != other.hasContents())
                return false;
            if (hasContents()) {
                if (!getContents()
                        .equals(other.getContents()))
                    return false;
            }
            if (!unknownFields.equals(other.unknownFields))
                return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
            hash = (37 * hash) + DATATYPE_FIELD_NUMBER;
            hash = (53 * hash) + getDatatype().hashCode();
            if (getShapeCount() > 0) {
                hash = (37 * hash) + SHAPE_FIELD_NUMBER;
                hash = (53 * hash) + getShapeList().hashCode();
            }
            if (!internalGetParameters().getMap().isEmpty()) {
                hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
                hash = (53 * hash) + internalGetParameters().hashCode();
            }
            if (hasContents()) {
                hash = (37 * hash) + CONTENTS_FIELD_NUMBER;
                hash = (53 * hash) + getContents().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder()
                    : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * An output tensor returned for an inference request.
         * </pre>
         *
         * Protobuf type {@code inference.ModelInferResponse.InferOutputTensor}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:inference.ModelInferResponse.InferOutputTensor)
                org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensorOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                    getDescriptor() {
                return org.kie.trustyai.connectors.kserve.v2.grpc.GrpcPredictV2.internal_static_inference_ModelInferResponse_InferOutputTensor_descriptor;
            }

            @SuppressWarnings({ "rawtypes" })
            protected com.google.protobuf.MapField internalGetMapField(
                    int number) {
                switch (number) {
                    case 4:
                        return internalGetParameters();
                    default:
                        throw new RuntimeException(
                                "Invalid map field number: " + number);
                }
            }

            @SuppressWarnings({ "rawtypes" })
            protected com.google.protobuf.MapField internalGetMutableMapField(
                    int number) {
                switch (number) {
                    case 4:
                        return internalGetMutableParameters();
                    default:
                        throw new RuntimeException(
                                "Invalid map field number: " + number);
                }
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                    internalGetFieldAccessorTable() {
                return org.kie.trustyai.connectors.kserve.v2.grpc.GrpcPredictV2.internal_static_inference_ModelInferResponse_InferOutputTensor_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.class,
                                org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.Builder.class);
            }

            // Construct using org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                name_ = "";

                datatype_ = "";

                shape_ = emptyLongList();
                bitField0_ = (bitField0_ & ~0x00000001);
                internalGetMutableParameters().clear();
                if (contentsBuilder_ == null) {
                    contents_ = null;
                } else {
                    contents_ = null;
                    contentsBuilder_ = null;
                }
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
                    getDescriptorForType() {
                return org.kie.trustyai.connectors.kserve.v2.grpc.GrpcPredictV2.internal_static_inference_ModelInferResponse_InferOutputTensor_descriptor;
            }

            @java.lang.Override
            public org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor getDefaultInstanceForType() {
                return org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.getDefaultInstance();
            }

            @java.lang.Override
            public org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor build() {
                org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor buildPartial() {
                org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor result = new org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor(this);
                int from_bitField0_ = bitField0_;
                result.name_ = name_;
                result.datatype_ = datatype_;
                if (((bitField0_ & 0x00000001) != 0)) {
                    shape_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000001);
                }
                result.shape_ = shape_;
                result.parameters_ = internalGetParameters();
                result.parameters_.makeImmutable();
                if (contentsBuilder_ == null) {
                    result.contents_ = contents_;
                } else {
                    result.contents_ = contentsBuilder_.build();
                }
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {
                return super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor) {
                    return mergeFrom((org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor other) {
                if (other == org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.getDefaultInstance())
                    return this;
                if (!other.getName().isEmpty()) {
                    name_ = other.name_;
                    onChanged();
                }
                if (!other.getDatatype().isEmpty()) {
                    datatype_ = other.datatype_;
                    onChanged();
                }
                if (!other.shape_.isEmpty()) {
                    if (shape_.isEmpty()) {
                        shape_ = other.shape_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        ensureShapeIsMutable();
                        shape_.addAll(other.shape_);
                    }
                    onChanged();
                }
                internalGetMutableParameters().mergeFrom(
                        other.internalGetParameters());
                if (other.hasContents()) {
                    mergeContents(other.getContents());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private java.lang.Object name_ = "";

            /**
             * <pre>
             * The tensor name.
             * </pre>
             *
             * <code>string name = 1;</code>
             * 
             * @return The name.
             */
            public java.lang.String getName() {
                java.lang.Object ref = name_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    name_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * The tensor name.
             * </pre>
             *
             * <code>string name = 1;</code>
             * 
             * @return The bytes for name.
             */
            public com.google.protobuf.ByteString
                    getNameBytes() {
                java.lang.Object ref = name_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The tensor name.
             * </pre>
             *
             * <code>string name = 1;</code>
             * 
             * @param value The name to set.
             * @return This builder for chaining.
             */
            public Builder setName(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                name_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The tensor name.
             * </pre>
             *
             * <code>string name = 1;</code>
             * 
             * @return This builder for chaining.
             */
            public Builder clearName() {

                name_ = getDefaultInstance().getName();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The tensor name.
             * </pre>
             *
             * <code>string name = 1;</code>
             * 
             * @param value The bytes for name to set.
             * @return This builder for chaining.
             */
            public Builder setNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                name_ = value;
                onChanged();
                return this;
            }

            private java.lang.Object datatype_ = "";

            /**
             * <pre>
             * The tensor data type.
             * </pre>
             *
             * <code>string datatype = 2;</code>
             * 
             * @return The datatype.
             */
            public java.lang.String getDatatype() {
                java.lang.Object ref = datatype_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    datatype_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * The tensor data type.
             * </pre>
             *
             * <code>string datatype = 2;</code>
             * 
             * @return The bytes for datatype.
             */
            public com.google.protobuf.ByteString
                    getDatatypeBytes() {
                java.lang.Object ref = datatype_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    datatype_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The tensor data type.
             * </pre>
             *
             * <code>string datatype = 2;</code>
             * 
             * @param value The datatype to set.
             * @return This builder for chaining.
             */
            public Builder setDatatype(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                datatype_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The tensor data type.
             * </pre>
             *
             * <code>string datatype = 2;</code>
             * 
             * @return This builder for chaining.
             */
            public Builder clearDatatype() {

                datatype_ = getDefaultInstance().getDatatype();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The tensor data type.
             * </pre>
             *
             * <code>string datatype = 2;</code>
             * 
             * @param value The bytes for datatype to set.
             * @return This builder for chaining.
             */
            public Builder setDatatypeBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                datatype_ = value;
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.LongList shape_ = emptyLongList();

            private void ensureShapeIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    shape_ = mutableCopy(shape_);
                    bitField0_ |= 0x00000001;
                }
            }

            /**
             * <pre>
             * The tensor shape.
             * </pre>
             *
             * <code>repeated int64 shape = 3;</code>
             * 
             * @return A list containing the shape.
             */
            public java.util.List<java.lang.Long>
                    getShapeList() {
                return ((bitField0_ & 0x00000001) != 0) ? java.util.Collections.unmodifiableList(shape_) : shape_;
            }

            /**
             * <pre>
             * The tensor shape.
             * </pre>
             *
             * <code>repeated int64 shape = 3;</code>
             * 
             * @return The count of shape.
             */
            public int getShapeCount() {
                return shape_.size();
            }

            /**
             * <pre>
             * The tensor shape.
             * </pre>
             *
             * <code>repeated int64 shape = 3;</code>
             * 
             * @param index The index of the element to return.
             * @return The shape at the given index.
             */
            public long getShape(int index) {
                return shape_.getLong(index);
            }

            /**
             * <pre>
             * The tensor shape.
             * </pre>
             *
             * <code>repeated int64 shape = 3;</code>
             * 
             * @param index The index to set the value at.
             * @param value The shape to set.
             * @return This builder for chaining.
             */
            public Builder setShape(
                    int index, long value) {
                ensureShapeIsMutable();
                shape_.setLong(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The tensor shape.
             * </pre>
             *
             * <code>repeated int64 shape = 3;</code>
             * 
             * @param value The shape to add.
             * @return This builder for chaining.
             */
            public Builder addShape(long value) {
                ensureShapeIsMutable();
                shape_.addLong(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The tensor shape.
             * </pre>
             *
             * <code>repeated int64 shape = 3;</code>
             * 
             * @param values The shape to add.
             * @return This builder for chaining.
             */
            public Builder addAllShape(
                    java.lang.Iterable<? extends java.lang.Long> values) {
                ensureShapeIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, shape_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The tensor shape.
             * </pre>
             *
             * <code>repeated int64 shape = 3;</code>
             * 
             * @return This builder for chaining.
             */
            public Builder clearShape() {
                shape_ = emptyLongList();
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
                return this;
            }

            private com.google.protobuf.MapField<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> parameters_;

            private com.google.protobuf.MapField<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter>
                    internalGetParameters() {
                if (parameters_ == null) {
                    return com.google.protobuf.MapField.emptyMapField(
                            ParametersDefaultEntryHolder.defaultEntry);
                }
                return parameters_;
            }

            private com.google.protobuf.MapField<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter>
                    internalGetMutableParameters() {
                onChanged();
                ;
                if (parameters_ == null) {
                    parameters_ = com.google.protobuf.MapField.newMapField(
                            ParametersDefaultEntryHolder.defaultEntry);
                }
                if (!parameters_.isMutable()) {
                    parameters_ = parameters_.copy();
                }
                return parameters_;
            }

            public int getParametersCount() {
                return internalGetParameters().getMap().size();
            }

            /**
             * <pre>
             * Optional output tensor parameters.
             * </pre>
             *
             * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
             */

            @java.lang.Override
            public boolean containsParameters(
                    java.lang.String key) {
                if (key == null) {
                    throw new NullPointerException("map key");
                }
                return internalGetParameters().getMap().containsKey(key);
            }

            /**
             * Use {@link #getParametersMap()} instead.
             */
            @java.lang.Override
            @java.lang.Deprecated
            public java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> getParameters() {
                return getParametersMap();
            }

            /**
             * <pre>
             * Optional output tensor parameters.
             * </pre>
             *
             * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
             */
            @java.lang.Override

            public java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> getParametersMap() {
                return internalGetParameters().getMap();
            }

            /**
             * <pre>
             * Optional output tensor parameters.
             * </pre>
             *
             * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
             */
            @java.lang.Override

            public org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter getParametersOrDefault(
                    java.lang.String key,
                    org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter defaultValue) {
                if (key == null) {
                    throw new NullPointerException("map key");
                }
                java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> map =
                        internalGetParameters().getMap();
                return map.containsKey(key) ? map.get(key) : defaultValue;
            }

            /**
             * <pre>
             * Optional output tensor parameters.
             * </pre>
             *
             * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
             */
            @java.lang.Override

            public org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter getParametersOrThrow(
                    java.lang.String key) {
                if (key == null) {
                    throw new NullPointerException("map key");
                }
                java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> map =
                        internalGetParameters().getMap();
                if (!map.containsKey(key)) {
                    throw new java.lang.IllegalArgumentException();
                }
                return map.get(key);
            }

            public Builder clearParameters() {
                internalGetMutableParameters().getMutableMap()
                        .clear();
                return this;
            }

            /**
             * <pre>
             * Optional output tensor parameters.
             * </pre>
             *
             * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
             */

            public Builder removeParameters(
                    java.lang.String key) {
                if (key == null) {
                    throw new NullPointerException("map key");
                }
                internalGetMutableParameters().getMutableMap()
                        .remove(key);
                return this;
            }

            /**
             * Use alternate mutation accessors instead.
             */
            @java.lang.Deprecated
            public java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter>
                    getMutableParameters() {
                return internalGetMutableParameters().getMutableMap();
            }

            /**
             * <pre>
             * Optional output tensor parameters.
             * </pre>
             *
             * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
             */
            public Builder putParameters(
                    java.lang.String key,
                    org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter value) {
                if (key == null) {
                    throw new NullPointerException("map key");
                }
                if (value == null) {
                    throw new NullPointerException("map value");
                }

                internalGetMutableParameters().getMutableMap()
                        .put(key, value);
                return this;
            }

            /**
             * <pre>
             * Optional output tensor parameters.
             * </pre>
             *
             * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
             */

            public Builder putAllParameters(
                    java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> values) {
                internalGetMutableParameters().getMutableMap()
                        .putAll(values);
                return this;
            }

            private org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents contents_;
            private com.google.protobuf.SingleFieldBuilderV3<org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents, org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents.Builder, org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContentsOrBuilder> contentsBuilder_;

            /**
             * <pre>
             * The tensor contents using a data-type format. This field must
             * not be specified if "raw" tensor contents are being used for
             * the inference response.
             * </pre>
             *
             * <code>.inference.InferTensorContents contents = 5;</code>
             * 
             * @return Whether the contents field is set.
             */
            public boolean hasContents() {
                return contentsBuilder_ != null || contents_ != null;
            }

            /**
             * <pre>
             * The tensor contents using a data-type format. This field must
             * not be specified if "raw" tensor contents are being used for
             * the inference response.
             * </pre>
             *
             * <code>.inference.InferTensorContents contents = 5;</code>
             * 
             * @return The contents.
             */
            public org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents getContents() {
                if (contentsBuilder_ == null) {
                    return contents_ == null ? org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents.getDefaultInstance() : contents_;
                } else {
                    return contentsBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * The tensor contents using a data-type format. This field must
             * not be specified if "raw" tensor contents are being used for
             * the inference response.
             * </pre>
             *
             * <code>.inference.InferTensorContents contents = 5;</code>
             */
            public Builder setContents(org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents value) {
                if (contentsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    contents_ = value;
                    onChanged();
                } else {
                    contentsBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * The tensor contents using a data-type format. This field must
             * not be specified if "raw" tensor contents are being used for
             * the inference response.
             * </pre>
             *
             * <code>.inference.InferTensorContents contents = 5;</code>
             */
            public Builder setContents(
                    org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents.Builder builderForValue) {
                if (contentsBuilder_ == null) {
                    contents_ = builderForValue.build();
                    onChanged();
                } else {
                    contentsBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * The tensor contents using a data-type format. This field must
             * not be specified if "raw" tensor contents are being used for
             * the inference response.
             * </pre>
             *
             * <code>.inference.InferTensorContents contents = 5;</code>
             */
            public Builder mergeContents(org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents value) {
                if (contentsBuilder_ == null) {
                    if (contents_ != null) {
                        contents_ =
                                org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents.newBuilder(contents_).mergeFrom(value).buildPartial();
                    } else {
                        contents_ = value;
                    }
                    onChanged();
                } else {
                    contentsBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * The tensor contents using a data-type format. This field must
             * not be specified if "raw" tensor contents are being used for
             * the inference response.
             * </pre>
             *
             * <code>.inference.InferTensorContents contents = 5;</code>
             */
            public Builder clearContents() {
                if (contentsBuilder_ == null) {
                    contents_ = null;
                    onChanged();
                } else {
                    contents_ = null;
                    contentsBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * The tensor contents using a data-type format. This field must
             * not be specified if "raw" tensor contents are being used for
             * the inference response.
             * </pre>
             *
             * <code>.inference.InferTensorContents contents = 5;</code>
             */
            public org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents.Builder getContentsBuilder() {

                onChanged();
                return getContentsFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * The tensor contents using a data-type format. This field must
             * not be specified if "raw" tensor contents are being used for
             * the inference response.
             * </pre>
             *
             * <code>.inference.InferTensorContents contents = 5;</code>
             */
            public org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContentsOrBuilder getContentsOrBuilder() {
                if (contentsBuilder_ != null) {
                    return contentsBuilder_.getMessageOrBuilder();
                } else {
                    return contents_ == null ? org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents.getDefaultInstance() : contents_;
                }
            }

            /**
             * <pre>
             * The tensor contents using a data-type format. This field must
             * not be specified if "raw" tensor contents are being used for
             * the inference response.
             * </pre>
             *
             * <code>.inference.InferTensorContents contents = 5;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents, org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents.Builder, org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContentsOrBuilder>
                    getContentsFieldBuilder() {
                if (contentsBuilder_ == null) {
                    contentsBuilder_ =
                            new com.google.protobuf.SingleFieldBuilderV3<org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents, org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContents.Builder, org.kie.trustyai.connectors.kserve.v2.grpc.InferTensorContentsOrBuilder>(
                                    getContents(),
                                    getParentForChildren(),
                                    isClean());
                    contents_ = null;
                }
                return contentsBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:inference.ModelInferResponse.InferOutputTensor)
        }

        // @@protoc_insertion_point(class_scope:inference.ModelInferResponse.InferOutputTensor)
        private static final org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor();
        }

        public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<InferOutputTensor> PARSER = new com.google.protobuf.AbstractParser<InferOutputTensor>() {
            @java.lang.Override
            public InferOutputTensor parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new InferOutputTensor(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<InferOutputTensor> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<InferOutputTensor> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public static final int MODEL_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object modelName_;

    /**
     * <pre>
     * The name of the model used for inference.
     * </pre>
     *
     * <code>string model_name = 1;</code>
     * 
     * @return The modelName.
     */
    @java.lang.Override
    public java.lang.String getModelName() {
        java.lang.Object ref = modelName_;
        if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
        } else {
            com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            modelName_ = s;
            return s;
        }
    }

    /**
     * <pre>
     * The name of the model used for inference.
     * </pre>
     *
     * <code>string model_name = 1;</code>
     * 
     * @return The bytes for modelName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
            getModelNameBytes() {
        java.lang.Object ref = modelName_;
        if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b =
                    com.google.protobuf.ByteString.copyFromUtf8(
                            (java.lang.String) ref);
            modelName_ = b;
            return b;
        } else {
            return (com.google.protobuf.ByteString) ref;
        }
    }

    public static final int MODEL_VERSION_FIELD_NUMBER = 2;
    private volatile java.lang.Object modelVersion_;

    /**
     * <pre>
     * The version of the model used for inference.
     * </pre>
     *
     * <code>string model_version = 2;</code>
     * 
     * @return The modelVersion.
     */
    @java.lang.Override
    public java.lang.String getModelVersion() {
        java.lang.Object ref = modelVersion_;
        if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
        } else {
            com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            modelVersion_ = s;
            return s;
        }
    }

    /**
     * <pre>
     * The version of the model used for inference.
     * </pre>
     *
     * <code>string model_version = 2;</code>
     * 
     * @return The bytes for modelVersion.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
            getModelVersionBytes() {
        java.lang.Object ref = modelVersion_;
        if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b =
                    com.google.protobuf.ByteString.copyFromUtf8(
                            (java.lang.String) ref);
            modelVersion_ = b;
            return b;
        } else {
            return (com.google.protobuf.ByteString) ref;
        }
    }

    public static final int ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object id_;

    /**
     * <pre>
     * The id of the inference request if one was specified.
     * </pre>
     *
     * <code>string id = 3;</code>
     * 
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
        } else {
            com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            id_ = s;
            return s;
        }
    }

    /**
     * <pre>
     * The id of the inference request if one was specified.
     * </pre>
     *
     * <code>string id = 3;</code>
     * 
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
            getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b =
                    com.google.protobuf.ByteString.copyFromUtf8(
                            (java.lang.String) ref);
            id_ = b;
            return b;
        } else {
            return (com.google.protobuf.ByteString) ref;
        }
    }

    public static final int PARAMETERS_FIELD_NUMBER = 4;

    private static final class ParametersDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> defaultEntry =
                com.google.protobuf.MapEntry.<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> newDefaultInstance(
                        org.kie.trustyai.connectors.kserve.v2.grpc.GrpcPredictV2.internal_static_inference_ModelInferResponse_ParametersEntry_descriptor,
                        com.google.protobuf.WireFormat.FieldType.STRING,
                        "",
                        com.google.protobuf.WireFormat.FieldType.MESSAGE,
                        org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter.getDefaultInstance());
    }

    private com.google.protobuf.MapField<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> parameters_;

    private com.google.protobuf.MapField<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter>
            internalGetParameters() {
        if (parameters_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                    ParametersDefaultEntryHolder.defaultEntry);
        }
        return parameters_;
    }

    public int getParametersCount() {
        return internalGetParameters().getMap().size();
    }

    /**
     * <pre>
     * Optional inference response parameters.
     * </pre>
     *
     * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
     */

    @java.lang.Override
    public boolean containsParameters(
            java.lang.String key) {
        if (key == null) {
            throw new NullPointerException("map key");
        }
        return internalGetParameters().getMap().containsKey(key);
    }

    /**
     * Use {@link #getParametersMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> getParameters() {
        return getParametersMap();
    }

    /**
     * <pre>
     * Optional inference response parameters.
     * </pre>
     *
     * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> getParametersMap() {
        return internalGetParameters().getMap();
    }

    /**
     * <pre>
     * Optional inference response parameters.
     * </pre>
     *
     * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
     */
    @java.lang.Override

    public org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter getParametersOrDefault(
            java.lang.String key,
            org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter defaultValue) {
        if (key == null) {
            throw new NullPointerException("map key");
        }
        java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> map =
                internalGetParameters().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
    }

    /**
     * <pre>
     * Optional inference response parameters.
     * </pre>
     *
     * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
     */
    @java.lang.Override

    public org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter getParametersOrThrow(
            java.lang.String key) {
        if (key == null) {
            throw new NullPointerException("map key");
        }
        java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> map =
                internalGetParameters().getMap();
        if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
    }

    public static final int OUTPUTS_FIELD_NUMBER = 5;
    private java.util.List<org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor> outputs_;

    /**
     * <pre>
     * The output tensors holding inference results.
     * </pre>
     *
     * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
     */
    @java.lang.Override
    public java.util.List<org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor> getOutputsList() {
        return outputs_;
    }

    /**
     * <pre>
     * The output tensors holding inference results.
     * </pre>
     *
     * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensorOrBuilder>
            getOutputsOrBuilderList() {
        return outputs_;
    }

    /**
     * <pre>
     * The output tensors holding inference results.
     * </pre>
     *
     * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
     */
    @java.lang.Override
    public int getOutputsCount() {
        return outputs_.size();
    }

    /**
     * <pre>
     * The output tensors holding inference results.
     * </pre>
     *
     * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
     */
    @java.lang.Override
    public org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor getOutputs(int index) {
        return outputs_.get(index);
    }

    /**
     * <pre>
     * The output tensors holding inference results.
     * </pre>
     *
     * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
     */
    @java.lang.Override
    public org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensorOrBuilder getOutputsOrBuilder(
            int index) {
        return outputs_.get(index);
    }

    public static final int RAW_OUTPUT_CONTENTS_FIELD_NUMBER = 6;
    private java.util.List<com.google.protobuf.ByteString> rawOutputContents_;

    /**
     * <pre>
     * The data contained in an output tensor can be represented in
     * "raw" bytes form or in the repeated type that matches the
     * tensor's data type. To use the raw representation 'raw_output_contents'
     * must be initialized with data for each tensor in the same order as
     * 'outputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 and BF16 data types must be represented as
     * raw content as there is no specific data type for a 16-bit float type.
     * If this field is specified then InferOutputTensor::contents must
     * not be specified for any output tensor.
     * </pre>
     *
     * <code>repeated bytes raw_output_contents = 6;</code>
     * 
     * @return A list containing the rawOutputContents.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
            getRawOutputContentsList() {
        return rawOutputContents_;
    }

    /**
     * <pre>
     * The data contained in an output tensor can be represented in
     * "raw" bytes form or in the repeated type that matches the
     * tensor's data type. To use the raw representation 'raw_output_contents'
     * must be initialized with data for each tensor in the same order as
     * 'outputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 and BF16 data types must be represented as
     * raw content as there is no specific data type for a 16-bit float type.
     * If this field is specified then InferOutputTensor::contents must
     * not be specified for any output tensor.
     * </pre>
     *
     * <code>repeated bytes raw_output_contents = 6;</code>
     * 
     * @return The count of rawOutputContents.
     */
    public int getRawOutputContentsCount() {
        return rawOutputContents_.size();
    }

    /**
     * <pre>
     * The data contained in an output tensor can be represented in
     * "raw" bytes form or in the repeated type that matches the
     * tensor's data type. To use the raw representation 'raw_output_contents'
     * must be initialized with data for each tensor in the same order as
     * 'outputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 and BF16 data types must be represented as
     * raw content as there is no specific data type for a 16-bit float type.
     * If this field is specified then InferOutputTensor::contents must
     * not be specified for any output tensor.
     * </pre>
     *
     * <code>repeated bytes raw_output_contents = 6;</code>
     * 
     * @param index The index of the element to return.
     * @return The rawOutputContents at the given index.
     */
    public com.google.protobuf.ByteString getRawOutputContents(int index) {
        return rawOutputContents_.get(index);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1)
            return true;
        if (isInitialized == 0)
            return false;

        memoizedIsInitialized = 1;
        return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(modelName_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, modelName_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(modelVersion_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, modelVersion_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 3, id_);
        }
        com.google.protobuf.GeneratedMessageV3
                .serializeStringMapTo(
                        output,
                        internalGetParameters(),
                        ParametersDefaultEntryHolder.defaultEntry,
                        4);
        for (int i = 0; i < outputs_.size(); i++) {
            output.writeMessage(5, outputs_.get(i));
        }
        for (int i = 0; i < rawOutputContents_.size(); i++) {
            output.writeBytes(6, rawOutputContents_.get(i));
        }
        unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1)
            return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(modelName_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, modelName_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(modelVersion_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, modelVersion_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, id_);
        }
        for (java.util.Map.Entry<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> entry : internalGetParameters().getMap().entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> parameters__ = ParametersDefaultEntryHolder.defaultEntry.newBuilderForType()
                    .setKey(entry.getKey())
                    .setValue(entry.getValue())
                    .build();
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(4, parameters__);
        }
        for (int i = 0; i < outputs_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(5, outputs_.get(i));
        }
        {
            int dataSize = 0;
            for (int i = 0; i < rawOutputContents_.size(); i++) {
                dataSize += com.google.protobuf.CodedOutputStream
                        .computeBytesSizeNoTag(rawOutputContents_.get(i));
            }
            size += dataSize;
            size += 1 * getRawOutputContentsList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse)) {
            return super.equals(obj);
        }
        org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse other = (org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse) obj;

        if (!getModelName()
                .equals(other.getModelName()))
            return false;
        if (!getModelVersion()
                .equals(other.getModelVersion()))
            return false;
        if (!getId()
                .equals(other.getId()))
            return false;
        if (!internalGetParameters().equals(
                other.internalGetParameters()))
            return false;
        if (!getOutputsList()
                .equals(other.getOutputsList()))
            return false;
        if (!getRawOutputContentsList()
                .equals(other.getRawOutputContentsList()))
            return false;
        if (!unknownFields.equals(other.unknownFields))
            return false;
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        if (memoizedHashCode != 0) {
            return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + MODEL_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getModelName().hashCode();
        hash = (37 * hash) + MODEL_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getModelVersion().hashCode();
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
        if (!internalGetParameters().getMap().isEmpty()) {
            hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
            hash = (53 * hash) + internalGetParameters().hashCode();
        }
        if (getOutputsCount() > 0) {
            hash = (37 * hash) + OUTPUTS_FIELD_NUMBER;
            hash = (53 * hash) + getOutputsList().hashCode();
        }
        if (getRawOutputContentsCount() > 0) {
            hash = (37 * hash) + RAW_OUTPUT_CONTENTS_FIELD_NUMBER;
            hash = (53 * hash) + getRawOutputContentsList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
    }

    public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse parseFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
                ? new Builder()
                : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
    }

    /**
     * Protobuf type {@code inference.ModelInferResponse}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:inference.ModelInferResponse)
            org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
            return org.kie.trustyai.connectors.kserve.v2.grpc.GrpcPredictV2.internal_static_inference_ModelInferResponse_descriptor;
        }

        @SuppressWarnings({ "rawtypes" })
        protected com.google.protobuf.MapField internalGetMapField(
                int number) {
            switch (number) {
                case 4:
                    return internalGetParameters();
                default:
                    throw new RuntimeException(
                            "Invalid map field number: " + number);
            }
        }

        @SuppressWarnings({ "rawtypes" })
        protected com.google.protobuf.MapField internalGetMutableMapField(
                int number) {
            switch (number) {
                case 4:
                    return internalGetMutableParameters();
                default:
                    throw new RuntimeException(
                            "Invalid map field number: " + number);
            }
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
            return org.kie.trustyai.connectors.kserve.v2.grpc.GrpcPredictV2.internal_static_inference_ModelInferResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.class, org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.Builder.class);
        }

        // Construct using org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.newBuilder()
        private Builder() {
            maybeForceBuilderInitialization();
        }

        private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                getOutputsFieldBuilder();
            }
        }

        @java.lang.Override
        public Builder clear() {
            super.clear();
            modelName_ = "";

            modelVersion_ = "";

            id_ = "";

            internalGetMutableParameters().clear();
            if (outputsBuilder_ == null) {
                outputs_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
            } else {
                outputsBuilder_.clear();
            }
            rawOutputContents_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
            return org.kie.trustyai.connectors.kserve.v2.grpc.GrpcPredictV2.internal_static_inference_ModelInferResponse_descriptor;
        }

        @java.lang.Override
        public org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse getDefaultInstanceForType() {
            return org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.getDefaultInstance();
        }

        @java.lang.Override
        public org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse build() {
            org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }

        @java.lang.Override
        public org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse buildPartial() {
            org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse result = new org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse(this);
            int from_bitField0_ = bitField0_;
            result.modelName_ = modelName_;
            result.modelVersion_ = modelVersion_;
            result.id_ = id_;
            result.parameters_ = internalGetParameters();
            result.parameters_.makeImmutable();
            if (outputsBuilder_ == null) {
                if (((bitField0_ & 0x00000002) != 0)) {
                    outputs_ = java.util.Collections.unmodifiableList(outputs_);
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.outputs_ = outputs_;
            } else {
                result.outputs_ = outputsBuilder_.build();
            }
            if (((bitField0_ & 0x00000004) != 0)) {
                rawOutputContents_ = java.util.Collections.unmodifiableList(rawOutputContents_);
                bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.rawOutputContents_ = rawOutputContents_;
            onBuilt();
            return result;
        }

        @java.lang.Override
        public Builder clone() {
            return super.clone();
        }

        @java.lang.Override
        public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
            return super.setField(field, value);
        }

        @java.lang.Override
        public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
        }

        @java.lang.Override
        public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
        }

        @java.lang.Override
        public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
        }

        @java.lang.Override
        public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
            return super.addRepeatedField(field, value);
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse) {
                return mergeFrom((org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }

        public Builder mergeFrom(org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse other) {
            if (other == org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.getDefaultInstance())
                return this;
            if (!other.getModelName().isEmpty()) {
                modelName_ = other.modelName_;
                onChanged();
            }
            if (!other.getModelVersion().isEmpty()) {
                modelVersion_ = other.modelVersion_;
                onChanged();
            }
            if (!other.getId().isEmpty()) {
                id_ = other.id_;
                onChanged();
            }
            internalGetMutableParameters().mergeFrom(
                    other.internalGetParameters());
            if (outputsBuilder_ == null) {
                if (!other.outputs_.isEmpty()) {
                    if (outputs_.isEmpty()) {
                        outputs_ = other.outputs_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureOutputsIsMutable();
                        outputs_.addAll(other.outputs_);
                    }
                    onChanged();
                }
            } else {
                if (!other.outputs_.isEmpty()) {
                    if (outputsBuilder_.isEmpty()) {
                        outputsBuilder_.dispose();
                        outputsBuilder_ = null;
                        outputs_ = other.outputs_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                        outputsBuilder_ =
                                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getOutputsFieldBuilder() : null;
                    } else {
                        outputsBuilder_.addAllMessages(other.outputs_);
                    }
                }
            }
            if (!other.rawOutputContents_.isEmpty()) {
                if (rawOutputContents_.isEmpty()) {
                    rawOutputContents_ = other.rawOutputContents_;
                    bitField0_ = (bitField0_ & ~0x00000004);
                } else {
                    ensureRawOutputContentsIsMutable();
                    rawOutputContents_.addAll(other.rawOutputContents_);
                }
                onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
            return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse parsedMessage = null;
            try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse) e.getUnfinishedMessage();
                throw e.unwrapIOException();
            } finally {
                if (parsedMessage != null) {
                    mergeFrom(parsedMessage);
                }
            }
            return this;
        }

        private int bitField0_;

        private java.lang.Object modelName_ = "";

        /**
         * <pre>
         * The name of the model used for inference.
         * </pre>
         *
         * <code>string model_name = 1;</code>
         * 
         * @return The modelName.
         */
        public java.lang.String getModelName() {
            java.lang.Object ref = modelName_;
            if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                modelName_ = s;
                return s;
            } else {
                return (java.lang.String) ref;
            }
        }

        /**
         * <pre>
         * The name of the model used for inference.
         * </pre>
         *
         * <code>string model_name = 1;</code>
         * 
         * @return The bytes for modelName.
         */
        public com.google.protobuf.ByteString
                getModelNameBytes() {
            java.lang.Object ref = modelName_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                modelName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * The name of the model used for inference.
         * </pre>
         *
         * <code>string model_name = 1;</code>
         * 
         * @param value The modelName to set.
         * @return This builder for chaining.
         */
        public Builder setModelName(
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            modelName_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The name of the model used for inference.
         * </pre>
         *
         * <code>string model_name = 1;</code>
         * 
         * @return This builder for chaining.
         */
        public Builder clearModelName() {

            modelName_ = getDefaultInstance().getModelName();
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The name of the model used for inference.
         * </pre>
         *
         * <code>string model_name = 1;</code>
         * 
         * @param value The bytes for modelName to set.
         * @return This builder for chaining.
         */
        public Builder setModelNameBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            modelName_ = value;
            onChanged();
            return this;
        }

        private java.lang.Object modelVersion_ = "";

        /**
         * <pre>
         * The version of the model used for inference.
         * </pre>
         *
         * <code>string model_version = 2;</code>
         * 
         * @return The modelVersion.
         */
        public java.lang.String getModelVersion() {
            java.lang.Object ref = modelVersion_;
            if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                modelVersion_ = s;
                return s;
            } else {
                return (java.lang.String) ref;
            }
        }

        /**
         * <pre>
         * The version of the model used for inference.
         * </pre>
         *
         * <code>string model_version = 2;</code>
         * 
         * @return The bytes for modelVersion.
         */
        public com.google.protobuf.ByteString
                getModelVersionBytes() {
            java.lang.Object ref = modelVersion_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                modelVersion_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * The version of the model used for inference.
         * </pre>
         *
         * <code>string model_version = 2;</code>
         * 
         * @param value The modelVersion to set.
         * @return This builder for chaining.
         */
        public Builder setModelVersion(
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            modelVersion_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The version of the model used for inference.
         * </pre>
         *
         * <code>string model_version = 2;</code>
         * 
         * @return This builder for chaining.
         */
        public Builder clearModelVersion() {

            modelVersion_ = getDefaultInstance().getModelVersion();
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The version of the model used for inference.
         * </pre>
         *
         * <code>string model_version = 2;</code>
         * 
         * @param value The bytes for modelVersion to set.
         * @return This builder for chaining.
         */
        public Builder setModelVersionBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            modelVersion_ = value;
            onChanged();
            return this;
        }

        private java.lang.Object id_ = "";

        /**
         * <pre>
         * The id of the inference request if one was specified.
         * </pre>
         *
         * <code>string id = 3;</code>
         * 
         * @return The id.
         */
        public java.lang.String getId() {
            java.lang.Object ref = id_;
            if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                id_ = s;
                return s;
            } else {
                return (java.lang.String) ref;
            }
        }

        /**
         * <pre>
         * The id of the inference request if one was specified.
         * </pre>
         *
         * <code>string id = 3;</code>
         * 
         * @return The bytes for id.
         */
        public com.google.protobuf.ByteString
                getIdBytes() {
            java.lang.Object ref = id_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                id_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * The id of the inference request if one was specified.
         * </pre>
         *
         * <code>string id = 3;</code>
         * 
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            id_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The id of the inference request if one was specified.
         * </pre>
         *
         * <code>string id = 3;</code>
         * 
         * @return This builder for chaining.
         */
        public Builder clearId() {

            id_ = getDefaultInstance().getId();
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The id of the inference request if one was specified.
         * </pre>
         *
         * <code>string id = 3;</code>
         * 
         * @param value The bytes for id to set.
         * @return This builder for chaining.
         */
        public Builder setIdBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            id_ = value;
            onChanged();
            return this;
        }

        private com.google.protobuf.MapField<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> parameters_;

        private com.google.protobuf.MapField<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter>
                internalGetParameters() {
            if (parameters_ == null) {
                return com.google.protobuf.MapField.emptyMapField(
                        ParametersDefaultEntryHolder.defaultEntry);
            }
            return parameters_;
        }

        private com.google.protobuf.MapField<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter>
                internalGetMutableParameters() {
            onChanged();
            ;
            if (parameters_ == null) {
                parameters_ = com.google.protobuf.MapField.newMapField(
                        ParametersDefaultEntryHolder.defaultEntry);
            }
            if (!parameters_.isMutable()) {
                parameters_ = parameters_.copy();
            }
            return parameters_;
        }

        public int getParametersCount() {
            return internalGetParameters().getMap().size();
        }

        /**
         * <pre>
         * Optional inference response parameters.
         * </pre>
         *
         * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
         */

        @java.lang.Override
        public boolean containsParameters(
                java.lang.String key) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            return internalGetParameters().getMap().containsKey(key);
        }

        /**
         * Use {@link #getParametersMap()} instead.
         */
        @java.lang.Override
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> getParameters() {
            return getParametersMap();
        }

        /**
         * <pre>
         * Optional inference response parameters.
         * </pre>
         *
         * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
         */
        @java.lang.Override

        public java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> getParametersMap() {
            return internalGetParameters().getMap();
        }

        /**
         * <pre>
         * Optional inference response parameters.
         * </pre>
         *
         * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
         */
        @java.lang.Override

        public org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter getParametersOrDefault(
                java.lang.String key,
                org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter defaultValue) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> map =
                    internalGetParameters().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
        }

        /**
         * <pre>
         * Optional inference response parameters.
         * </pre>
         *
         * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
         */
        @java.lang.Override

        public org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter getParametersOrThrow(
                java.lang.String key) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> map =
                    internalGetParameters().getMap();
            if (!map.containsKey(key)) {
                throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
        }

        public Builder clearParameters() {
            internalGetMutableParameters().getMutableMap()
                    .clear();
            return this;
        }

        /**
         * <pre>
         * Optional inference response parameters.
         * </pre>
         *
         * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
         */

        public Builder removeParameters(
                java.lang.String key) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            internalGetMutableParameters().getMutableMap()
                    .remove(key);
            return this;
        }

        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter>
                getMutableParameters() {
            return internalGetMutableParameters().getMutableMap();
        }

        /**
         * <pre>
         * Optional inference response parameters.
         * </pre>
         *
         * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
         */
        public Builder putParameters(
                java.lang.String key,
                org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter value) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            if (value == null) {
                throw new NullPointerException("map value");
            }

            internalGetMutableParameters().getMutableMap()
                    .put(key, value);
            return this;
        }

        /**
         * <pre>
         * Optional inference response parameters.
         * </pre>
         *
         * <code>map&lt;string, .inference.InferParameter&gt; parameters = 4;</code>
         */

        public Builder putAllParameters(
                java.util.Map<java.lang.String, org.kie.trustyai.connectors.kserve.v2.grpc.InferParameter> values) {
            internalGetMutableParameters().getMutableMap()
                    .putAll(values);
            return this;
        }

        private java.util.List<org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor> outputs_ =
                java.util.Collections.emptyList();

        private void ensureOutputsIsMutable() {
            if (!((bitField0_ & 0x00000002) != 0)) {
                outputs_ = new java.util.ArrayList<org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor>(outputs_);
                bitField0_ |= 0x00000002;
            }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor, org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.Builder, org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensorOrBuilder> outputsBuilder_;

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public java.util.List<org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor> getOutputsList() {
            if (outputsBuilder_ == null) {
                return java.util.Collections.unmodifiableList(outputs_);
            } else {
                return outputsBuilder_.getMessageList();
            }
        }

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public int getOutputsCount() {
            if (outputsBuilder_ == null) {
                return outputs_.size();
            } else {
                return outputsBuilder_.getCount();
            }
        }

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor getOutputs(int index) {
            if (outputsBuilder_ == null) {
                return outputs_.get(index);
            } else {
                return outputsBuilder_.getMessage(index);
            }
        }

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public Builder setOutputs(
                int index, org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor value) {
            if (outputsBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureOutputsIsMutable();
                outputs_.set(index, value);
                onChanged();
            } else {
                outputsBuilder_.setMessage(index, value);
            }
            return this;
        }

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public Builder setOutputs(
                int index, org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.Builder builderForValue) {
            if (outputsBuilder_ == null) {
                ensureOutputsIsMutable();
                outputs_.set(index, builderForValue.build());
                onChanged();
            } else {
                outputsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
        }

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public Builder addOutputs(org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor value) {
            if (outputsBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureOutputsIsMutable();
                outputs_.add(value);
                onChanged();
            } else {
                outputsBuilder_.addMessage(value);
            }
            return this;
        }

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public Builder addOutputs(
                int index, org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor value) {
            if (outputsBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureOutputsIsMutable();
                outputs_.add(index, value);
                onChanged();
            } else {
                outputsBuilder_.addMessage(index, value);
            }
            return this;
        }

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public Builder addOutputs(
                org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.Builder builderForValue) {
            if (outputsBuilder_ == null) {
                ensureOutputsIsMutable();
                outputs_.add(builderForValue.build());
                onChanged();
            } else {
                outputsBuilder_.addMessage(builderForValue.build());
            }
            return this;
        }

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public Builder addOutputs(
                int index, org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.Builder builderForValue) {
            if (outputsBuilder_ == null) {
                ensureOutputsIsMutable();
                outputs_.add(index, builderForValue.build());
                onChanged();
            } else {
                outputsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
        }

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public Builder addAllOutputs(
                java.lang.Iterable<? extends org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor> values) {
            if (outputsBuilder_ == null) {
                ensureOutputsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, outputs_);
                onChanged();
            } else {
                outputsBuilder_.addAllMessages(values);
            }
            return this;
        }

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public Builder clearOutputs() {
            if (outputsBuilder_ == null) {
                outputs_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
            } else {
                outputsBuilder_.clear();
            }
            return this;
        }

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public Builder removeOutputs(int index) {
            if (outputsBuilder_ == null) {
                ensureOutputsIsMutable();
                outputs_.remove(index);
                onChanged();
            } else {
                outputsBuilder_.remove(index);
            }
            return this;
        }

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.Builder getOutputsBuilder(
                int index) {
            return getOutputsFieldBuilder().getBuilder(index);
        }

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensorOrBuilder getOutputsOrBuilder(
                int index) {
            if (outputsBuilder_ == null) {
                return outputs_.get(index);
            } else {
                return outputsBuilder_.getMessageOrBuilder(index);
            }
        }

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public java.util.List<? extends org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensorOrBuilder>
                getOutputsOrBuilderList() {
            if (outputsBuilder_ != null) {
                return outputsBuilder_.getMessageOrBuilderList();
            } else {
                return java.util.Collections.unmodifiableList(outputs_);
            }
        }

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.Builder addOutputsBuilder() {
            return getOutputsFieldBuilder().addBuilder(
                    org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.getDefaultInstance());
        }

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.Builder addOutputsBuilder(
                int index) {
            return getOutputsFieldBuilder().addBuilder(
                    index, org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.getDefaultInstance());
        }

        /**
         * <pre>
         * The output tensors holding inference results.
         * </pre>
         *
         * <code>repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;</code>
         */
        public java.util.List<org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.Builder>
                getOutputsBuilderList() {
            return getOutputsFieldBuilder().getBuilderList();
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor, org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.Builder, org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensorOrBuilder>
                getOutputsFieldBuilder() {
            if (outputsBuilder_ == null) {
                outputsBuilder_ =
                        new com.google.protobuf.RepeatedFieldBuilderV3<org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor, org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensor.Builder, org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse.InferOutputTensorOrBuilder>(
                                outputs_,
                                ((bitField0_ & 0x00000002) != 0),
                                getParentForChildren(),
                                isClean());
                outputs_ = null;
            }
            return outputsBuilder_;
        }

        private java.util.List<com.google.protobuf.ByteString> rawOutputContents_ = java.util.Collections.emptyList();

        private void ensureRawOutputContentsIsMutable() {
            if (!((bitField0_ & 0x00000004) != 0)) {
                rawOutputContents_ = new java.util.ArrayList<com.google.protobuf.ByteString>(rawOutputContents_);
                bitField0_ |= 0x00000004;
            }
        }

        /**
         * <pre>
         * The data contained in an output tensor can be represented in
         * "raw" bytes form or in the repeated type that matches the
         * tensor's data type. To use the raw representation 'raw_output_contents'
         * must be initialized with data for each tensor in the same order as
         * 'outputs'. For each tensor, the size of this content must match
         * what is expected by the tensor's shape and data type. The raw
         * data must be the flattened, one-dimensional, row-major order of
         * the tensor elements without any stride or padding between the
         * elements. Note that the FP16 and BF16 data types must be represented as
         * raw content as there is no specific data type for a 16-bit float type.
         * If this field is specified then InferOutputTensor::contents must
         * not be specified for any output tensor.
         * </pre>
         *
         * <code>repeated bytes raw_output_contents = 6;</code>
         * 
         * @return A list containing the rawOutputContents.
         */
        public java.util.List<com.google.protobuf.ByteString>
                getRawOutputContentsList() {
            return ((bitField0_ & 0x00000004) != 0) ? java.util.Collections.unmodifiableList(rawOutputContents_) : rawOutputContents_;
        }

        /**
         * <pre>
         * The data contained in an output tensor can be represented in
         * "raw" bytes form or in the repeated type that matches the
         * tensor's data type. To use the raw representation 'raw_output_contents'
         * must be initialized with data for each tensor in the same order as
         * 'outputs'. For each tensor, the size of this content must match
         * what is expected by the tensor's shape and data type. The raw
         * data must be the flattened, one-dimensional, row-major order of
         * the tensor elements without any stride or padding between the
         * elements. Note that the FP16 and BF16 data types must be represented as
         * raw content as there is no specific data type for a 16-bit float type.
         * If this field is specified then InferOutputTensor::contents must
         * not be specified for any output tensor.
         * </pre>
         *
         * <code>repeated bytes raw_output_contents = 6;</code>
         * 
         * @return The count of rawOutputContents.
         */
        public int getRawOutputContentsCount() {
            return rawOutputContents_.size();
        }

        /**
         * <pre>
         * The data contained in an output tensor can be represented in
         * "raw" bytes form or in the repeated type that matches the
         * tensor's data type. To use the raw representation 'raw_output_contents'
         * must be initialized with data for each tensor in the same order as
         * 'outputs'. For each tensor, the size of this content must match
         * what is expected by the tensor's shape and data type. The raw
         * data must be the flattened, one-dimensional, row-major order of
         * the tensor elements without any stride or padding between the
         * elements. Note that the FP16 and BF16 data types must be represented as
         * raw content as there is no specific data type for a 16-bit float type.
         * If this field is specified then InferOutputTensor::contents must
         * not be specified for any output tensor.
         * </pre>
         *
         * <code>repeated bytes raw_output_contents = 6;</code>
         * 
         * @param index The index of the element to return.
         * @return The rawOutputContents at the given index.
         */
        public com.google.protobuf.ByteString getRawOutputContents(int index) {
            return rawOutputContents_.get(index);
        }

        /**
         * <pre>
         * The data contained in an output tensor can be represented in
         * "raw" bytes form or in the repeated type that matches the
         * tensor's data type. To use the raw representation 'raw_output_contents'
         * must be initialized with data for each tensor in the same order as
         * 'outputs'. For each tensor, the size of this content must match
         * what is expected by the tensor's shape and data type. The raw
         * data must be the flattened, one-dimensional, row-major order of
         * the tensor elements without any stride or padding between the
         * elements. Note that the FP16 and BF16 data types must be represented as
         * raw content as there is no specific data type for a 16-bit float type.
         * If this field is specified then InferOutputTensor::contents must
         * not be specified for any output tensor.
         * </pre>
         *
         * <code>repeated bytes raw_output_contents = 6;</code>
         * 
         * @param index The index to set the value at.
         * @param value The rawOutputContents to set.
         * @return This builder for chaining.
         */
        public Builder setRawOutputContents(
                int index, com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureRawOutputContentsIsMutable();
            rawOutputContents_.set(index, value);
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The data contained in an output tensor can be represented in
         * "raw" bytes form or in the repeated type that matches the
         * tensor's data type. To use the raw representation 'raw_output_contents'
         * must be initialized with data for each tensor in the same order as
         * 'outputs'. For each tensor, the size of this content must match
         * what is expected by the tensor's shape and data type. The raw
         * data must be the flattened, one-dimensional, row-major order of
         * the tensor elements without any stride or padding between the
         * elements. Note that the FP16 and BF16 data types must be represented as
         * raw content as there is no specific data type for a 16-bit float type.
         * If this field is specified then InferOutputTensor::contents must
         * not be specified for any output tensor.
         * </pre>
         *
         * <code>repeated bytes raw_output_contents = 6;</code>
         * 
         * @param value The rawOutputContents to add.
         * @return This builder for chaining.
         */
        public Builder addRawOutputContents(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureRawOutputContentsIsMutable();
            rawOutputContents_.add(value);
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The data contained in an output tensor can be represented in
         * "raw" bytes form or in the repeated type that matches the
         * tensor's data type. To use the raw representation 'raw_output_contents'
         * must be initialized with data for each tensor in the same order as
         * 'outputs'. For each tensor, the size of this content must match
         * what is expected by the tensor's shape and data type. The raw
         * data must be the flattened, one-dimensional, row-major order of
         * the tensor elements without any stride or padding between the
         * elements. Note that the FP16 and BF16 data types must be represented as
         * raw content as there is no specific data type for a 16-bit float type.
         * If this field is specified then InferOutputTensor::contents must
         * not be specified for any output tensor.
         * </pre>
         *
         * <code>repeated bytes raw_output_contents = 6;</code>
         * 
         * @param values The rawOutputContents to add.
         * @return This builder for chaining.
         */
        public Builder addAllRawOutputContents(
                java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
            ensureRawOutputContentsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                    values, rawOutputContents_);
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The data contained in an output tensor can be represented in
         * "raw" bytes form or in the repeated type that matches the
         * tensor's data type. To use the raw representation 'raw_output_contents'
         * must be initialized with data for each tensor in the same order as
         * 'outputs'. For each tensor, the size of this content must match
         * what is expected by the tensor's shape and data type. The raw
         * data must be the flattened, one-dimensional, row-major order of
         * the tensor elements without any stride or padding between the
         * elements. Note that the FP16 and BF16 data types must be represented as
         * raw content as there is no specific data type for a 16-bit float type.
         * If this field is specified then InferOutputTensor::contents must
         * not be specified for any output tensor.
         * </pre>
         *
         * <code>repeated bytes raw_output_contents = 6;</code>
         * 
         * @return This builder for chaining.
         */
        public Builder clearRawOutputContents() {
            rawOutputContents_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
            return this;
        }

        @java.lang.Override
        public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
        }

        // @@protoc_insertion_point(builder_scope:inference.ModelInferResponse)
    }

    // @@protoc_insertion_point(class_scope:inference.ModelInferResponse)
    private static final org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse DEFAULT_INSTANCE;
    static {
        DEFAULT_INSTANCE = new org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse();
    }

    public static org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ModelInferResponse> PARSER = new com.google.protobuf.AbstractParser<ModelInferResponse>() {
        @java.lang.Override
        public ModelInferResponse parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return new ModelInferResponse(input, extensionRegistry);
        }
    };

    public static com.google.protobuf.Parser<ModelInferResponse> parser() {
        return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ModelInferResponse> getParserForType() {
        return PARSER;
    }

    @java.lang.Override
    public org.kie.trustyai.connectors.kserve.v2.grpc.ModelInferResponse getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }

}
