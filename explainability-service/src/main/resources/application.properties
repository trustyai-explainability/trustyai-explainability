quarkus.http.host=0.0.0.0
quarkus.http.http2=false
# Enable HTTPS
quarkus.http.ssl-port=4443
# Set the path to the certificate and key files
quarkus.http.ssl.certificate.files=/etc/tls/internal/tls.crt
quarkus.http.ssl.certificate.key-files=/etc/tls/internal/tls.key

# remove in test case
%test.quarkus.http.ssl.certificate.files=
%test.quarkus.http.ssl.certificate.key-files=

quarkus.container-image.builder=docker
quarkus.container-image.build=false
quarkus.container-image.group=trustyai
quarkus.container-image.name=trustyai-service
quarkus.log.level=${LOG_LEVEL:INFO}
quarkus.smallrye-openapi.store-schema-directory=target/generated/
%test.quarkus.log.level=INFO
%test.quarkus.log.min-level=DEBUG


quarkus.minio.devservices.enabled=false
# Kubernetes values
quarkus.kubernetes.ingress.expose=true
quarkus.kubernetes.ports.http.host-port=8080
quarkus.kubernetes.deploy=false
# OpenShift values
quarkus.openshift.deployment-kind=Deployment
quarkus.openshift.env.mapping.service-model-name.from-configmap=trustyai-config
quarkus.openshift.env.mapping.service-model-name.with-key=service_model_name
quarkus.openshift.env.mapping.service-storage-format.from-configmap=trustyai-config
quarkus.openshift.env.mapping.service-storage-format.with-key=service_storage_format
quarkus.openshift.env.mapping.service-data-format.from-configmap=trustyai-config
quarkus.openshift.env.mapping.service-data-format.with-key=service_data_format
quarkus.openshift.env.mapping.pvc-input-filename.from-configmap=trustyai-config
quarkus.openshift.env.mapping.pvc-input-filename.with-key=pvc_input_filename
quarkus.openshift.env.mapping.pvc-output-filename.from-configmap=trustyai-config
quarkus.openshift.env.mapping.pvc-output-filename.with-key=pvc_output_filename
quarkus.openshift.env.mapping.service-metrics-schedule.from-configmap=trustyai-config
quarkus.openshift.env.mapping.service-metrics-schedule.with-key=service_metrics_schedule
quarkus.openshift.env.mapping.service-batch-size.from-configmap=trustyai-config
quarkus.openshift.env.mapping.service-batch-size.with-key=service_batch_size
quarkus.openshift.mounts.volume.path=/inputs
quarkus.openshift.pvc-volumes.volume.claim-name=trustyai-service-pvc

# HTTP Server Limits
quarkus.http.limits.max-form-buffered-bytes=64M

# Dev
quarkus.kubernetes.deployment-target=openshift

# Development/testing options
quarkus.kubernetes.image-pull-policy=Never
quarkus.kubernetes.env.vars.model-name=example
quarkus.kubernetes.env.vars.storage-format=RANDOM_TEST
quarkus.kubernetes-client.devservices.enabled=false
# Misc
quarkus.banner.path=banner.txt
# HTTP
quarkus.http.handle-100-continue-automatically=true

# Database ===================================
# ENV SETTINGS
quarkus.datasource.health.enabled=${QUARKUS_HIBERNATE_ORM_ACTIVE:false}
quarkus.hibernate-orm.active=${QUARKUS_HIBERNATE_ORM_ACTIVE:false}
quarkus.datasource.db-kind=${QUARKUS_DATASOURCE_DB_KIND:mariadb}
quarkus.datasource.jdbc.max-size=${QUARKUS_DATASOURCE_JDBC_MAX_SIZE:16}
quarkus.datasource.username=${QUARKUS_DATASOURCE_USERNAME:quarkus}
quarkus.datasource.password=${QUARKUS_DATASOURCE_PASSWORD:quarkus}
quarkus.datasource.jdbc.url=${QUARKUS_DATASOURCE_JDBC_URL:null}
quarkus.hibernate-orm.database.generation=${QUARKUS_DATASOURCE_GENERATION:update}
quarkus.hibernate-orm.jdbc.statement-batch-size=50
#quarkus.hibernate-orm.statistics=true
#quarkus.hibernate-orm.log-session-metrics=true

# MYSQL SETTINGS
#quarkus.datasource.db-kind=mysql
#quarkus.datasource.jdbc.url=jdbc:mysql://mariadb-service:3306/trustyai_database
#quarkus.datasource.jdbc.max-size=16
#quarkus.datasource.username=${QUARKUS_DATASOURCE_USER:quarkus}
#quarkus.datasource.password=${QUARKUS_DATASOURCE_PASSWORD:quarkus}
#quarkus.hibernate-orm.database.generation=${QUARKUS_DATASOURCE_GENERATION:drop-and-create}

# H2 SETTINGS
#quarkus.datasource.db-kind=h2
#quarkus.datasource.jdbc.url=jdbc:h2:file:/inputs/trustyai_test_H2_DB;
#quarkus.datasource.jdbc.max-size=16
#quarkus.datasource.username=${QUARKUS_DATASOURCE_USER:quarkus}
#quarkus.datasource.password=${QUARKUS_DATASOURCE_PASSWORD:quarkus}
#quarkus.hibernate-orm.database.generation=${QUARKUS_DATASOURCE_GENERATION:drop-and-create}

## Logging
quarkus.log.handler.file.termination-log.enable=true
quarkus.log.handler.file.termination-log.level=ERROR
quarkus.log.handler.file.termination-log.path=/dev/termination-log
%test.quarkus.log.handler.file.termination-log.path=/tmp/dev/termination-log
quarkus.log.handler.file.termination-log.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c{2.}] (%t) %s%xEx{message}%n
quarkus.log.handlers=console,termination-log

# Feature flags
# odh endpoints
%odh.endpoints.fairness=enable
%odh.endpoints.drift=enable
%odh.endpoints.explainers.local.shap=enable
%odh.endpoints.explainers.local.lime=enable
%odh.endpoints.explainers.local.counterfactual=enable
%odh.endpoints.explainers.local.tssaliency=enable
%odh.endpoints.explainers.global=enable

# rhoai endpoints
%rhoai.endpoints.fairness=enable
%rhoai.endpoints.drift=enable
%rhoai.endpoints.explainers.local.shap=disable
%rhoai.endpoints.explainers.local.lime=disable
%rhoai.endpoints.explainers.local.counterfactual=disable
%rhoai.endpoints.explainers.local.tssaliency=disable
%rhoai.endpoints.explainers.global=disable

# test profile endpoint overrides
%test.endpoints.data.download=enable

# defaults
endpoints.fairness=enable
endpoints.drift=enable
endpoints.explainers.local.shap=enable
endpoints.explainers.local.lime=enable
endpoints.explainers.local.counterfactual=enable
endpoints.explainers.local.tssaliency=enable
endpoints.explainers.global=enable
endpoints.data.download=disable
